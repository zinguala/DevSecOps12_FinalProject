pipeline {
    agent any

   stages {
        stage('gitpullrepo branch ansible') {
            steps {
                git branch: 'ansible', url: 'https://github.com/zinguala/DevSecOps12_FinalProject.git'
            }
        }

    stage ('Check for existence of ansible/playbooks dir') {
       
    steps {
        script {
            if (!fileExists('/etc/ansible/playbooks')) {
               sh 'sudo mkdir /etc/ansible/playbooks'
            }
            }
        }
     }

        stage('copy playbook to /etc/ansible/playbooks') {
            steps {
                sh 'sudo cp web1playbook-4replicas.yml /etc/ansible/playbooks/web1playbook-4replicas.yml'
    
            }
        }
        
         stage('gitpullrepo branch minikube-cluster' ) {
            steps {
                git branch: 'minikube-cluster', url: 'https://github.com/zinguala/DevSecOps12_FinalProject.git'
            }
        }

         stage ('Check for existence of etc/minikube_configs dir') {
       
    steps {
        script {
            if (!fileExists('/etc/minikube_configs')) {
               sh 'sudo mkdir /etc/minikube_configs'
            }
            }
        }
     }

        stage('copy minikube config deployment file to /etc/minikube_configs') {
            steps {
                sh 'sudo cp client-deployment-4replicas.yml /etc/minikube_configs/client-deployment-4replicas.yml'
                     
            }
        }
        stage('copy minikube config service file to /etc/minikube_configs') {
            steps {
                sh 'sudo cp client-deployment-service.yml /etc/minikube_configs/client-deployment-service.yml' 
            }
        }
        stage('playbook copy minikube configs to web and apply them') {
            steps {
                sh 'sudo ansible-playbook /etc/ansible/playbooks/web1playbook-4replicas.yml -i /etc/ansible/inventory/inventory'
    
            }
        }
  }
}
  
